version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.18-browsers
    steps:
      - checkout
      # - restore_cache:
          # key: dependency-cache-{{ checksum "ember-quickstart/yarn.lock" }}


      # install nginx with the relevant stuu and start it
      # configure for testci1111111.com

      - run:
          name: install nginx
          command: sudo apt install nginx
          when: always
      - run:
          name: service nginx start
          command: sudo service nginx start
          when: always
      - run:
          name: service nginx status
          command: service nginx status
          when: always
      - run:
          name: sudo mkdir -p /var/www/testci1111111.com/html
          command: sudo mkdir -p /var/www/testci1111111.com/html
          when: always
      - run:
          name: sudo chown -R `whoami`:`whoami` /var/www/testci1111111.com/html
          command: sudo chown -R `whoami`:`whoami` /var/www/testci1111111.com/html
          when: always
      - run:
          name: sudo chmod -R 755 /var/www/testci1111111.com
          command: sudo chmod -R 755 /var/www/testci1111111.com
          when: always
      - run:
          name: sudo touch /var/www/testci1111111.com/html/index.html
          command: sudo touch /var/www/testci1111111.com/html/index.html
          when: always
      - run:
          name: sudo chmod -R 777 /var/www/testci1111111.com/html/
          command: sudo chmod -R 777 /var/www/testci1111111.com/html/
          when: always
      - run:
          name: /var/www/testci1111111.com/html/index.html
          command: sudo echo '<html><head><title>Welcome to testci1111111.com!</title></head><body><h1>Success!  The testci1111111.com server block is working!</h1></body></html>' >> /var/www/testci1111111.com/html/index.html
          when: always
      - run:
          name: /etc/nginx/sites-available/testci1111111.com
          command: sudo cp server_conf /etc/nginx/sites-available/testci1111111.com
          when: always
      - run:
          name: sudo cp index.php /var/www/testci1111111.com/html
          command: sudo cp index.php /var/www/testci1111111.com/html
          when: always
      - run:
          name: cat /etc/nginx/sites-available/testci1111111.com
          command: cat /etc/nginx/sites-available/testci1111111.com
          when: always
      - run:
          name: sudo ln -s /etc/nginx/sites-available/testci1111111.com /etc/nginx/sites-enabled/
          command: sudo ln -s /etc/nginx/sites-available/testci1111111.com /etc/nginx/sites-enabled/
          when: always
      - run:
          name: sudo sed -i 's/# server_names_hash_bucket_size/server_names_hash_bucket_size/g' /etc/nginx/nginx.conf
          command: sudo sed -i 's/# server_names_hash_bucket_size/server_names_hash_bucket_size/g' /etc/nginx/nginx.conf
          when: always
      - run:
          name: sudo nginx -t
          command: sudo nginx -t
          when: always
      - run:
          name: service nginx restart
          command: sudo service nginx restart
          when: always
      - run:
          name: curl -X GET 'http://testci1111111.com'
          command: sudo curl -X GET 'http://testci1111111.com'
          when: always




      # install php-7.2

      - run:
          name: sudo apt-get install software-properties-common
          command: sudo apt-get install -y software-properties-common
          when: always
      - run:
          name: sudo apt-get update
          command: sudo apt-get update
          when: always

      - run:
          name: gpg --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C
          command: gpg --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C
          when: always
      - run:
          name: gpg --export --armor  4F4EA0AAE5267A6C | sudo apt-key add -
          command: gpg --export --armor  4F4EA0AAE5267A6C | sudo apt-key add -
          when: always
      - run:
          name: echo -e "deb http://ppa.launchpad.net/ondrej/php/ubuntu/  xenial main" | sudo tee /etc/apt/sources.list.d/ondrej-ubuntu-php-xenial.list
          command: echo -e "deb http://ppa.launchpad.net/ondrej/php/ubuntu/  xenial main" | sudo tee /etc/apt/sources.list.d/ondrej-ubuntu-php-xenial.list
          when: always
      - run:
          name: sudo apt-get update
          command: sudo apt-get update
          when: always
      - run:
          name: sudo apt-get install php7.2 php7.2-cli php7.2-common
          command: sudo apt-get install php7.2 php7.2-cli php7.2-common
          when: always
      - run:
          name: sudo apt-get install php7.2-curl php7.2-gd php7.2-json php7.2-mbstring php7.2-intl php7.2-mysql php7.2-xml php7.2-zip
          command: sudo apt-get install php7.2-curl php7.2-gd php7.2-json php7.2-mbstring php7.2-intl php7.2-mysql php7.2-xml php7.2-zip
          when: always
      - run:
          name: php -v
          command: php -v
          when: always
      - run:
          name: sudo apt-get install php7.2-soap
          command: sudo apt-get install php7.2-soap
          when: always
      # - run:
      #     name: sudo composer install
      #     command: sudo composer install
      #     when: always

      - run:
          name: sudo chmod 777 /etc/hosts
          command: sudo chmod 777 /etc/hosts
          when: always
      - run:
          name: sudo echo '127.0.0.1   accounts.ucraft.local developers.ucraft.local' >> /etc/hosts
          command: sudo echo '127.0.0.1   accounts.ucraft.local developers.ucraft.local' >> /etc/hosts
          when: always
      - run:
          name: cat /etc/hosts
          command: cat /etc/hosts
          when: always


      - run:
          name: sudo mkdir -p /var/www/html/accounts
          command: sudo mkdir -p /var/www/html/accounts
          when: always
      - run:
          name: sudo mkdir -p /var/www/html/builder
          command: sudo mkdir -p /var/www/html/builder
          when: always


      - run:
          name: sudo apt update
          command: sudo apt update
          when: always
      - run:
          name: sudo apt install mysql-server
          command: sudo apt install mysql-server
          when: always
      - run:
          name: sudo service mysql start
          command: sudo service mysql start
          when: always


      - run:
          name: cd /tmp
          command: cd /tmp
          when: always
      - run:
          name: curl -sS https://getcomposer.org/installer | php
          command: curl -sS https://getcomposer.org/installer | php
          when: always
      - run:
          name: sudo mv composer.phar /usr/local/bin/composer
          command: sudo mv composer.phar /usr/local/bin/composer
          when: always



workflows:
  version: 2
  build-and-test:
    jobs:
      - build

